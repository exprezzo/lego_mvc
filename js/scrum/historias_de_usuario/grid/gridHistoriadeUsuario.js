/*
 * File: gridHistoriadeUsuario.js
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */

gridHistoriadeUsuario = Ext.extend(gridHistoriadeUsuarioUi, {    
	initComponent: function() {
        gridHistoriadeUsuario.superclass.initComponent.call(this);
		this.store=new stoHistoriasDUsuario({			
			api:{
				read: '/Historias/listar',
				create: '/Historias/crear',
				update: '/Historias/guardar',
				destroy: '/Historias/eliminar'
			},
			writer:new Ext.data.JsonWriter({
				encode: true,
				writeAllFields: true // write all fields, not just those that changed
			})
		});
		this.bottomToolbar.bind(this.store);
		//----------------------------------
	//  para que este grid se comporte como un grid del catalogo crud, ejecutamos la siguiente linea
	
		Ext.apply(this,comportamiento_grid,{
			xtype_del_form:"edicionHistoria"
		});	
		
	//  y asi se activa el comporstamiento
		this.activarComportamiento();
		
		this.store.on('beforeload',function(store, options){			
			options.params.tipo=this.initialConfig.tipo;
			if (this.initialConfig.tipo=='sprint'){
				options.params.sprintId=this.initialConfig.idSprint;
			}
		},this);
	//----------------------------------
		this.bottomToolbar.doRefresh();
	//----------------------------------
		this.configComboMover();
    },
	configComboMover:function(){
		//console.log(this);
		
		this.on('afterrender',function(){
			this.cmbMover.store=new stoProyectos({
				idProperty:'id',
				url: '/historias/getDestinos'
			});
			
			this.cmbMover.store.on('beforeload', function(store, options){
				options.params.tipo=this.initialConfig.tipo;
				if (this.initialConfig.tipo=='sprint'){
					options.params.sprintId=this.initialConfig.idSprint;
				}
			},this);			
		},this);		
		
		this.btnMover.on('click',function(){
			this.moverHistoria();
		},this);
	},
	moverHistoria:function(){
		//alert("moverHistoria");
		var grid=this.getGrid();
		var sel=grid.getSelected();
		//var sel=selMod.getSelection();
		console.log(sel);
		if (sel==undefined) return;
		var params={
			idHistoria:sel.id,
			idDestino:this.cmbMover.getValue()
		} ;
		Ext.Ajax.request({
		   url: '/historias/mover',
		   params: params,
		   scope:this,
		   success: function(response, opts){
			  var result = Ext.decode(response.responseText);
			  if (result.success===true){
				this.getGrid().bottomToolbar.doRefresh();
				if (result.msg)
					topMsg.setAlert("Historias", result.msg); 
			  }else{				
					alert(result.msg); 
			  }			  
		   },
		   failure: function(response, opts) {
			  //console.log('server-side failure with status code ' + response.status);
		   }
		});
	}
});
Ext.reg('gridHistoriadeUsuario', gridHistoriadeUsuario);