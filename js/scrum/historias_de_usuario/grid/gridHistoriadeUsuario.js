/*
 * File: gridHistoriadeUsuario.js
 * 
 * This file was generated by Ext Designer version 1.1.2.
 * http://www.sencha.com/products/designer/
 *
 * This file will be generated the first time you export.
 *
 * You should implement event handling and custom methods in this
 * class.
 */
 
gridHistoriadeUsuario = Ext.extend(gridHistoriadeUsuarioUi, {    
	mostrarOcultarBotones:function(){  //PENDIENTE: encontrar manera de evitar copiar el contenido
		var sel=this.getSelectionModel();
			
		if(sel.getCount()==0){
		
				this.btnEditar.setDisabled(true);				
		
				
		
				this.btnEliminar.setDisabled(true);
				
				this.btnUp.setDisabled(true);
				
				this.btnDown.setDisabled(true);
			
		}else{
		
				this.btnEditar.setDisabled(false);				
				
				
					
				this.btnEliminar.setDisabled(false);
				
				this.btnUp.setDisabled(false);
				
				this.btnDown.setDisabled(false);
		}
	},
	initComponent: function() {
        gridHistoriadeUsuario.superclass.initComponent.call(this);
		this.store=new stoHistoriasDUsuario({			
			api:{
				read: '/Historias/listar',
				create: '/Historias/crear',
				update: '/Historias/guardar',
				destroy: '/Historias/eliminar'
			},
			writer:new Ext.data.JsonWriter({
				encode: true,
				writeAllFields: true // write all fields, not just those that changed
			})
		});
		this.bottomToolbar.bind(this.store);
		//----------------------------------
	//  para que este grid se comporte como un grid del catalogo crud, ejecutamos la siguiente linea
		this.xtype_del_form="edicionHistoria";
		Ext.applyIf(this,comportamiento_grid);	
		
	//  y asi se activa el comporstamiento
		this.activarComportamiento();
		
		this.store.on('beforeload',function(store, options){			
		//PENDIENTE: Explicar este bloque de codigo
			options.params.tipo=this.initialConfig.tipo;			
			if (this.initialConfig.tipo=='sprint'){			
				options.params.sprintId=this.initialConfig.idSprint;
				//Obtener el elemento seleccionado
				var selected=this.getGrid().getSelected();
				
				var idSeleccionado=( selected != undefined)? selected.id : 0;
				options.params.idSeleccionado = idSeleccionado;
			}
		},this);
		
		this.store.on('load',function(store, records, options){			
			
			if (options.params.idSeleccionado != undefined && options.params.idSeleccionado!=0){
				var record= store.getById(options.params.idSeleccionado);
				
				var index=-1;
				if (record!=undefined)
					index= store.indexOf( record );
				
				if (index>-1){
					this.getGrid().getSelectionModel().selectRow(index);
				}
					
					
			}
				
				
		},this);
	//----------------------------------		
		this.configComboMover();
		
		this.configBotonesMover();		
		
    },
	configBotonesMover:function(){
	
		this.btnUp.on("click",this.moverArriba,this);
		this.btnDown.on("click",this.moverAbajo,this);
		
	},
	//Muestra sprints y Backlog , filtra la ubicacion actual	
	configComboMover:function(){		
		this.on('afterrender',function(){
			this.cmbMover.store=new stoProyectos({
				idProperty:'id',
				url: '/historias/getDestinos'
			});
			
			this.cmbMover.store.on('beforeload', function(store, options){
				options.params.tipo=this.initialConfig.tipo;
				if (this.initialConfig.tipo=='sprint'){
					options.params.sprintId=this.initialConfig.idSprint;
				}
			},this);			
		},this);		
		
		this.btnMover.on('click',function(){
			this.reubicarHistoria();
		},this);
	},
	reubicarHistoria:function(){ //entre sprints y la pila de producto.
		
		var grid=this.getGrid();
		var sel=grid.getSelected();
		
		if (sel==undefined) return;
		var params={
			idHistoria:sel.id,
			idDestino:this.cmbMover.getValue()
		} ;
		Ext.Ajax.request({
		   url: '/historias/mover',
		   params: params,
		   scope:this,
		   success: function(response, opts){
			  var result = Ext.decode(response.responseText);
			  if (result.success===true){
				this.getGrid().bottomToolbar.doRefresh();
				if (result.msg)
					topMsg.setAlert("Historias", result.msg); 
			  }else{				
					alert(result.msg); 
			  }			  
		   },
		   failure: function(response, opts) {
			  //console.log('server-side failure with status code ' + response.status);
		   }
		});
	},
	moverArriba:function(){
		this.moverHistoria('up');
	},
	moverAbajo:function(){
		this.moverHistoria('down');
	},
	moverHistoria:function(direccion){
		var idHistoria=0;
		
		var grid=this.getGrid();
		var sel=grid.getSelected();
		if (sel!=undefined) 
			idHistoria=sel.id;
			
		if (idHistoria==0) return false;
		
		Ext.Ajax.request({
		   url: '/historias/mover_historia',
		   params: {
				idHistoria:idHistoria,
				direccion:direccion
		   },
		   scope:this,
		   success: function(response, opts){
			  var result = Ext.decode(response.responseText);			  
			  if (result.success===true){												
				this.getGrid().bottomToolbar.doRefresh();
			  }else{				
					alert(result.msg); 
			  }			  
		   },
		   failure: function(response, opts) {
			  //console.log('server-side failure with status code ' + response.status);
		   }
		});
	}
});
Ext.reg('gridHistoriadeUsuario', gridHistoriadeUsuario);